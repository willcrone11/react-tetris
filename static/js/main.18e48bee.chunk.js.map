{"version":3,"sources":["gameHelpers.js","components/styles/StyledTetris.js","tetrominos.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/Instructions.js","components/StartButton.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","reportWebVitals.js","index.js"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","StyledTetris","TETROMINOS","shape","color","I","J","L","O","S","T","Z","randomTetromino","tetrominos","randTetromino","Math","floor","random","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","Cell","React","memo","Stage","StyledDisplay","gameOver","Display","text","StyledStartButton","button","Instructions","state","isExpanded","handleExpandEvent","setState","renderExpandedComponent","renderButtonText","className","this","onClick","Component","StartButton","callback","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","mtrx","_","index","column","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","console","log","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","move","keyCode","pot","hardDrop","role","tabIndex","onKeyDown","e","onKeyUp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18e48bee.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () => \n    new Array(STAGE_WIDTH).fill([0, 'clear'])\n  );\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  // Using for loops to be able to return (and break). Not possible with forEach\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      // 1. Check that we're on an actual Tetromino cell\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          // 2. Check that our move is inside the game areas height (y)\n          // That we're not through bottom of the play area\n          !stage[y + player.pos.y + moveY] ||\n          // 3. Check that our move is inside the game areas width (x)\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          // 4. Check that the cell we're moving to isn't set to clear\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            'clear'\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n  // 5. If everything above is false\n  return false;\n};","import styled from 'styled-components';\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n`\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n`;","export const TETROMINOS = {\n  0: { shape: [[0]], color: '0, 0, 0' },\n  I: {\n    shape: [\n      [0, 'I', 0, 0],\n      [0, 'I', 0, 0],\n      [0, 'I', 0, 0],\n      [0, 'I', 0, 0]\n    ],\n    color: '80, 227, 230',\n  },\n  J: {\n    shape: [\n      [0, 'J', 0],\n      [0, 'J', 0],\n      ['J', 'J', 0]\n    ],\n    color: '36, 95, 223',\n  },\n  L: {\n    shape: [\n      [0, 'L', 0],\n      [0, 'L', 0],\n      [0, 'L', 'L']\n    ],\n    color: '223, 173, 36',\n  },\n  O: {\n    shape: [\n      ['O', 'O'],\n      ['O', 'O']\n    ],\n    color: '223, 217, 36',\n  },\n  S: {\n    shape: [\n      [0, 'S', 'S'],\n      ['S', 'S', 0],\n      [0, 0, 0]\n    ],\n    color: '48, 211, 56',\n  },\n  T: {\n    shape: [\n      [0, 0, 0],\n      ['T', 'T', 'T'],\n      [0, 'T', 0]\n    ],\n    color: '132, 61, 198',\n  },\n  Z: {\n    shape: [\n      ['Z', 'Z', 0],\n      [0, 'Z', 'Z'],\n      [0, 0, 0]\n    ],\n    color: '227, 78, 78',\n  }\n}\n\nexport const randomTetromino = () => {\n  const tetrominos = 'IJLOSTZ';\n  const randTetromino = \n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\n  return TETROMINOS[randTetromino];\n}","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n\n  useEffect(() => {\n    setRowsCleared(0);\n    const sweepRows = newStage =>\n      newStage.reduce((ack, row) => {\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\n          setRowsCleared(prev => prev + 1);\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n          return ack;\n        }\n        ack.push(row);\n        return ack;\n      }, []);\n\n    const updateStage = prevStage => {\n      //flush the stage\n      const newStage = prevStage.map(row =>\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell))\n      );\n\n      //draw the tetromino\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              value,\n              `${player.collided ? 'merged' : 'clear'}`,\n            ];\n          }\n        });\n      });\n      //checks score when collided\n      if (player.collided) {\n        resetPlayer();\n        return sweepRows(newStage);\n      }\n      return newStage;\n    };\n\n    // Here are the updates\n    setStage(prev => updateStage(prev));\n  }, [\n    player.collided,\n    player.pos.x,\n    player.pos.y,\n    player.tetromino,\n    resetPlayer,\n  ]);\n\n  return [stage, setStage, rowsCleared];\n};","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc 10vw / ${props => props.width}\n  );\n  grid-template-columns: repeat(${props => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #333;\n  width: 100%;\n  @media (min-width: 200px){\n    width: 80vw;\n    height: 200px;\n  }\n  @media (min-width: 300px){\n    width: 70vw;\n    height: 250px;\n  }\n  @media (min-width: 550px){\n    width: 70vw;\n    height: 400px;\n  }\n  @media (min-width: 700px){\n    width: 50vw;\n    height: 500px;\n  }\n  @media (min-width: 850px){\n    width: 40vw;\n    height: 550px;\n  }\n  @media (min-width: 1000px){\n    width: 35vw;\n    height: 550px;\n  }\n  @media (min-width: 1200px){\n    width: 30vw;\n    height: 550px;\n  }\n  @media (min-width: 1600px){\n    width: 30vw;\n    height: 700px;\n  }\n  width: 150vw;\n  height: 300px;\n  background: #111;\n`;","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n  width: auto;\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`;","import React from 'react';\nimport { StyledCell } from './styles/StyledCell';\nimport { TETROMINOS } from '../tetrominos';\n\nconst Cell = ({ type }) => (\n  <StyledCell type={\"J\"} color={TETROMINOS[type].color} />\n);\n\nexport default React.memo(Cell);","import React from 'react';\nimport { StyledStage } from './styles/StyledStage';\n\nimport Cell from './Cell';\n\nconst Stage = ({ stage }) => (\n  <StyledStage width={stage[0].length} height={stage.length}>\n    {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n  </StyledStage>\n);\n\nexport default Stage;","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #333;\n  @media (min-width: 800px){\n    min-height: 30px;\n    width: 100%;\n  }\n  min-height: 10px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? 'red' : '#999')};\n  background: #000;\n  font-family: Pixel, Arial, Helvetica;\n  font-size: 0.8rem;\n`;","import React from 'react';\nimport { StyledDisplay } from './styles/StyledDisplay';\n\nconst Display = ({ gameOver, text }) => (\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n)\n\nexport default Display;","import styled from 'styled-components';\n\nexport const StyledStartButton = styled.button`\n  box-sizing: border-box;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  border: none;\n  color: white;\n  background: #333;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`;","import React, { Component } from \"react\";\n\nclass Instructions extends Component {\n  \n  state = {\n    isExpanded: false, // Event is collapsed by default\n  };\n\n  // Toggle expand/collapse event on click\n  handleExpandEvent = () => {\n    if (this.state.isExpanded === false) {\n      this.setState({\n        isExpanded: true,\n      });\n    } else {\n      this.setState({\n        isExpanded: false,\n      });\n    }\n  };\n\n  renderExpandedComponent = () => {\n    if (this.state.isExpanded) {\n      return (\n        <p>\n          <ul>\n          <li>Use left/right arrow keys to move tetromino from side to side </li><br/>\n          <li>Use up arrow key to rotate tetromino</li><br/>\n          <li>Use down arrow key to move tetromino down at a faster rate</li><br/>\n          <li>Press shift key to send tetromino straight to the bottom</li><br/>\n          <li>Press space bar to restart game</li>\n          </ul>\n        </p>\n      );\n    }\n  };\n\n  renderButtonText = () => {\n    return !this.state.isExpanded ? 'Show Instructions' : 'Hide Instructions';\n  };\n\n  render() {\n    return (\n      <div className=\"instructions\">\n        <div className=\"instructionsInner\">\n          <div>{this.renderExpandedComponent()}</div>\n          <button \n          type='button' \n          className='instructions-btn'\n          onClick={this.handleExpandEvent}\n          >\n            {this.renderButtonText()}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Instructions;","import React from 'react';\nimport { StyledStartButton } from './styles/StyledStartButton';\nimport Instructions from './Instructions';\n\nconst StartButton = ({ callback }) => (\n  <div>\n  <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n  <Instructions/>\n  </div>\n);\n\nexport default StartButton;","import React, { useState } from 'react';\n\nimport { createStage, checkCollision } from '../gameHelpers';\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n    rowsCleared\n  );\n\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  };\n\n  const keyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      // Activate the interval again when user releases down arrow.\n      if (keyCode === 40) {\n        setDropTime(1000 / (level + 1));\n      }\n    }\n  };\n\n  const startGame = () => {\n    // Reset everything\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setScore(0);\n    setLevel(0);\n    setRows(0);\n    setGameOver(false);\n  };\n\n  const drop = () => {\n    // Increase level when player has cleared 10 rows\n    if (rows > (level + 1) * 10) {\n      setLevel(prev => prev + 1);\n      // Also increase speed\n      setDropTime(1000 / (level + 1) + 200);\n    }\n\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    } else {\n      // Game over!\n      if (player.pos.y < 1) {\n        console.log('GAME OVER!!!');\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const dropPlayer = () => {\n    // We don't need to run the interval when we use the arrow down to\n    // move the tetromino downwards. So deactivate it for now.\n    setDropTime(null);\n    drop();\n  };\n\n  // This one starts the game\n  // Custom hook by Dan Abramov\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n  //tetromino automatically goes to bottom\n  const hardDrop = () => {\n    let pot = 0;\n    while (!checkCollision(player, stage, { x: 0, y: pot })) {\n      pot += 1;\n    }\n    updatePlayerPos({ x: 0, y: pot-1, collided: true });\n  }\n\n  //applies functionality to move/rotate/drop tetrominos across stage with arrow keys and shift key for drop\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      } else if (keyCode === 16) {\n        hardDrop();\n      }\n    }\n  };\n\n  return (\n    <StyledTetrisWrapper\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={e => move(e)}\n      onKeyUp={keyUp}\n    >\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text=\"Game Over\" />\n          ) : (\n            <div>\n              <Display text={`Score: ${score}`} />\n              <Display text={`rows: ${rows}`} />\n              <Display text={`Level: ${level}`} />\n            </div>\n          )}\n          <StartButton callback={startGame} />\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;","import { useState, useCallback } from 'react';\n\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\n\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false,\n  });\n\n  function rotate(matrix, dir) {\n    // Make rows into columns (transpose)\n    const mtrx = matrix.map((_, index) => matrix.map(column => column[index]));\n    // Reverse each row to get a rotated matrix\n    if (dir > 0) return mtrx.map(row => row.reverse());\n    return mtrx.reverse();\n  }\n\n  function playerRotate(stage, dir) {\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n    setPlayer(clonedPlayer);\n  }\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer(prev => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\n      collided,\n    }));\n  };\n\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: randomTetromino().shape,\n      collided: false,\n    });\n  }, []);\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\n};","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = rowsCleared => {\n  const [score, setScore] = useState(0);\n  const [rows, setRows] = useState(0);\n  const [level, setLevel] = useState(0);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const linePoints = [40, 100, 300, 1200];\n\n  const calcScore = useCallback(() => {\n    // We have score\n    if (rowsCleared > 0) {\n      // This is how original Tetris score is calculated\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n      setRows(prev => prev + rowsCleared);\n    }\n  }, [level, linePoints, rowsCleared]);\n\n  useEffect(() => {\n    calcScore();\n  }, [calcScore, rowsCleared, score]);\n\n  return [score, setScore, rows, setRows, level, setLevel];\n};","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n  <div className=\"App\">\n    <Tetris />\n  </div>\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}